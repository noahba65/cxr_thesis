Test Loss: 0.17155794323184667
Test Acc: 94.04915912031048
Model Structure:
customEfficientNet(
  (features): Sequential(
    (0): ConvBnAct(
      (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (batch_norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (1): MBConvN(
      (expand): Identity()
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
        (batch_norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(32, 32, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
      (convk1): Conv2d(32, 32, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (2): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
        (batch_norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(96, 96, kernel_size=(1, 3), stride=(1, 2), padding=(0, 1))
      (convk1): Conv2d(96, 96, kernel_size=(3, 1), stride=(2, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(96, 4, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(4, 96, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (3): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
        (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(144, 144, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
      (convk1): Conv2d(144, 144, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (4): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
        (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(144, 144, kernel_size=(1, 3), stride=(1, 2), padding=(0, 1))
      (convk1): Conv2d(144, 144, kernel_size=(3, 1), stride=(2, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (5): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)
        (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(240, 240, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
      (convk1): Conv2d(240, 240, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (6): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240, bias=False)
        (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(240, 240, kernel_size=(1, 3), stride=(1, 2), padding=(0, 1))
      (convk1): Conv2d(240, 240, kernel_size=(3, 1), stride=(2, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (7): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
        (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(480, 480, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
      (convk1): Conv2d(480, 480, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (8): MBConvN(
      (expand): ConvBnAct(
        (conv): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (depthwise_conv): ConvBnAct(
        (conv): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
        (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): SiLU()
      )
      (conv1k): Conv2d(480, 480, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
      (convk1): Conv2d(480, 480, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
      (se): SqueezeExcitation(
        (se): Sequential(
          (0): AdaptiveAvgPool2d(output_size=1)
          (1): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))
          (2): SiLU()
          (3): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))
          (4): Sigmoid()
        )
      )
      (pointwise_conv): ConvBnAct(
        (conv): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (batch_norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): Identity()
      )
      (drop_layers): StochasticDepth()
      (batch_norm): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (9): ConvBnAct(
      (conv): Conv2d(80, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (batch_norm): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (classifier): Sequential(
    (0): Dropout(p=0.2, inplace=False)
    (1): Linear(in_features=1280, out_features=4, bias=True)
  )
)
Using mps device
